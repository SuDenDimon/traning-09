{"version":3,"file":"commonHelpers2.js","sources":["../src/main.js"],"sourcesContent":["// Якщо імейл і пароль користувача збігаються, зберігай дані з форми при сабміті\n// у локальне сховище і змінюй кнопку login на Logout і роби поля введення\n// недоступними для змін.\n\n// При перезавантаженні сторінки, якщо користувач залогінений, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// З локального сховища.\n\n// Якщо введені дані не збігаються з потрібними даними, викликати аlert і\n// повідомляти про помилку.\n\nimport \"./js/promise\";\n\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst USER_DATA = {\n  email: \"user@mail.com\",\n  password: \"secret\",\n};\n\nconst loginForm = document.querySelector(\"#login-form\");\nloginForm.addEventListener(\"submit\", onFormSubmit);\nconst buttonRef = document.querySelector(\".login-btn\");\nconst inputEmail = document.querySelector(\"[name='email']\");\nconst inputPassword = document.querySelector(\"[name='password']\");\n\nfunction onFormSubmit(event) {\n    event.preventDefault();\n    if(buttonRef.textContent === \"Logout\") {\n        buttonRef.textContent = \"Login\";\n        localStorage.removeItem(\"userData\");\n        inputEmail.removeAttribute(\"readonly\");\n        inputPassword.removeAttribute(\"readonly\");\n        loginForm.reset();\n        return;\n    }\n\n    const emailValue = event.target.elements.email.value.trim();\n    const passwordValue = event.target.elements.password.value.trim();\n\n    if(emailValue === \"\" || passwordValue === \"\") {\n        iziToast.warning({message: \"Треба заповнити усі поля!!!\"}) \n        return;\n    };\n    if(emailValue !== USER_DATA.email || passwordValue !== USER_DATA.password) {\n        iziToast.error({message: \"Пароль або емейл не співпадає!!\"})\n        return;\n    }\n\n    localStorage.setItem(\"userData\", JSON.stringify({email: emailValue, password: passwordValue}))\n    buttonRef.textContent = \"Logout\";\n    inputEmail.setAttribute(\"readonly\", true);\n    inputPassword.setAttribute(\"readonly\", true);\n\n    \n}\n    const saveData = localStorage.getItem(\"userData\");\n\n    if(saveData) {\n        const parseSaveData = JSON.parse(saveData);\n        inputEmail.value = parseSaveData.email;\n        inputPassword.value = parseSaveData.password;\n        buttonRef.textContent = \"Logout\";\n        inputEmail.setAttribute(\"readonly\", true);\n        inputPassword.setAttribute(\"readonly\", true);\n    }\n\n"],"names":["USER_DATA","loginForm","onFormSubmit","buttonRef","inputEmail","inputPassword","event","emailValue","passwordValue","iziToast","saveData","parseSaveData"],"mappings":"oFAkBA,MAAMA,EAAY,CAChB,MAAO,gBACP,SAAU,QACZ,EAEMC,EAAY,SAAS,cAAc,aAAa,EACtDA,EAAU,iBAAiB,SAAUC,CAAY,EACjD,MAAMC,EAAY,SAAS,cAAc,YAAY,EAC/CC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAgB,SAAS,cAAc,mBAAmB,EAEhE,SAASH,EAAaI,EAAO,CAEzB,GADAA,EAAM,eAAc,EACjBH,EAAU,cAAgB,SAAU,CACnCA,EAAU,YAAc,QACxB,aAAa,WAAW,UAAU,EAClCC,EAAW,gBAAgB,UAAU,EACrCC,EAAc,gBAAgB,UAAU,EACxCJ,EAAU,MAAK,EACf,MACH,CAED,MAAMM,EAAaD,EAAM,OAAO,SAAS,MAAM,MAAM,OAC/CE,EAAgBF,EAAM,OAAO,SAAS,SAAS,MAAM,OAE3D,GAAGC,IAAe,IAAMC,IAAkB,GAAI,CAC1CC,EAAS,QAAQ,CAAC,QAAS,6BAA6B,CAAC,EACzD,MACR,CACI,GAAGF,IAAeP,EAAU,OAASQ,IAAkBR,EAAU,SAAU,CACvES,EAAS,MAAM,CAAC,QAAS,iCAAiC,CAAC,EAC3D,MACH,CAED,aAAa,QAAQ,WAAY,KAAK,UAAU,CAAC,MAAOF,EAAY,SAAUC,CAAa,CAAC,CAAC,EAC7FL,EAAU,YAAc,SACxBC,EAAW,aAAa,WAAY,EAAI,EACxCC,EAAc,aAAa,WAAY,EAAI,CAG/C,CACI,MAAMK,EAAW,aAAa,QAAQ,UAAU,EAEhD,GAAGA,EAAU,CACT,MAAMC,EAAgB,KAAK,MAAMD,CAAQ,EACzCN,EAAW,MAAQO,EAAc,MACjCN,EAAc,MAAQM,EAAc,SACpCR,EAAU,YAAc,SACxBC,EAAW,aAAa,WAAY,EAAI,EACxCC,EAAc,aAAa,WAAY,EAAI,CACnD"}